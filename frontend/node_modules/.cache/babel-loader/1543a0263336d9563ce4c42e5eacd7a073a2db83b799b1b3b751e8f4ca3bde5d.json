{"ast":null,"code":"import _objectSpread from\"C:/Users/Manish singh/Desktop/personalized-news/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect}from'react';// Performance monitoring utilities\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const measurePerformance=(name,fn)=>{const start=performance.now();const result=fn();const end=performance.now();if(process.env.NODE_ENV==='development'){console.log(\"\\u23F1\\uFE0F \".concat(name,\" took \").concat((end-start).toFixed(2),\"ms\"));}return result;};export const measureAsyncPerformance=async(name,fn)=>{const start=performance.now();const result=await fn();const end=performance.now();if(process.env.NODE_ENV==='development'){console.log(\"\\u23F1\\uFE0F \".concat(name,\" took \").concat((end-start).toFixed(2),\"ms\"));}return result;};// Web Vitals monitoring\nexport const trackWebVitals=()=>{if(typeof window!=='undefined'&&'PerformanceObserver'in window){// Track Largest Contentful Paint (LCP)\nconst lcpObserver=new PerformanceObserver(list=>{const entries=list.getEntries();const lastEntry=entries[entries.length-1];console.log('LCP:',lastEntry.startTime);});lcpObserver.observe({entryTypes:['largest-contentful-paint']});// Track First Input Delay (FID)\nconst fidObserver=new PerformanceObserver(list=>{const entries=list.getEntries();entries.forEach(entry=>{console.log('FID:',entry.processingStart-entry.startTime);});});fidObserver.observe({entryTypes:['first-input']});// Track Cumulative Layout Shift (CLS)\nlet clsValue=0;const clsObserver=new PerformanceObserver(list=>{const entries=list.getEntries();entries.forEach(entry=>{if(!entry.hadRecentInput){clsValue+=entry.value;}});console.log('CLS:',clsValue);});clsObserver.observe({entryTypes:['layout-shift']});}};// Memory usage monitoring\nexport const trackMemoryUsage=()=>{if('memory'in performance){const memory=performance.memory;console.log('Memory Usage:',{used:\"\".concat((memory.usedJSHeapSize/1048576).toFixed(2),\" MB\"),total:\"\".concat((memory.totalJSHeapSize/1048576).toFixed(2),\" MB\"),limit:\"\".concat((memory.jsHeapSizeLimit/1048576).toFixed(2),\" MB\")});}};// Component render time tracking\nexport const withPerformanceTracking=(WrappedComponent,componentName)=>{return/*#__PURE__*/React.memo(props=>{const startTime=performance.now();useEffect(()=>{const endTime=performance.now();if(process.env.NODE_ENV==='development'){console.log(\"\\uD83C\\uDFAD \".concat(componentName,\" rendered in \").concat((endTime-startTime).toFixed(2),\"ms\"));}});return/*#__PURE__*/_jsx(WrappedComponent,_objectSpread({},props));});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}