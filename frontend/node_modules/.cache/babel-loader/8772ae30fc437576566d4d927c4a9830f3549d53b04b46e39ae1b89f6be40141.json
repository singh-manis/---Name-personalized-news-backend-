{"ast":null,"code":"import _defineProperty from \"C:/Users/Manish singh/Desktop/personalized-news/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { constructFrom } from \"../../../constructFrom.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { timezonePatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\nimport { parseTimezonePattern } from \"../utils.js\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 10);\n    _defineProperty(this, \"incompatibleTokens\", [\"t\", \"T\", \"X\"]);\n  }\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n      case \"xxxxx\":\n        return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, date.getTime() - getTimezoneOffsetInMilliseconds(date) - value);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}