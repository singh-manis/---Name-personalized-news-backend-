{"ast":null,"code":"// Environment variable validation\nconst requiredEnvVars = ['REACT_APP_API_URL'];\nconst optionalEnvVars = ['REACT_APP_GEMINI_API_KEY', 'REACT_APP_SOCKET_URL', 'REACT_APP_ANALYTICS_ID'];\nexport const validateEnvironment = () => {\n  const missing = [];\n  requiredEnvVars.forEach(varName => {\n    if (!process.env[varName]) {\n      missing.push(varName);\n    }\n  });\n  if (missing.length > 0) {\n    console.error('Missing required environment variables:', missing);\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('In development, some features may not work without these variables');\n    } else {\n      throw new Error(`Missing required environment variables: ${missing.join(', ')}`);\n    }\n  }\n\n  // Log optional variables that are missing\n  optionalEnvVars.forEach(varName => {\n    if (!process.env[varName]) {\n      console.warn(`Optional environment variable not set: ${varName}`);\n    }\n  });\n  return {\n    isValid: missing.length === 0,\n    missing,\n    apiUrl: process.env.REACT_APP_API_URL,\n    geminiKey: process.env.REACT_APP_GEMINI_API_KEY,\n    socketUrl: process.env.REACT_APP_SOCKET_URL,\n    analyticsId: process.env.REACT_APP_ANALYTICS_ID\n  };\n};\n\n// Validate on import\nexport const envConfig = validateEnvironment();","map":{"version":3,"names":["requiredEnvVars","optionalEnvVars","validateEnvironment","missing","forEach","varName","process","env","push","length","console","error","NODE_ENV","warn","Error","join","isValid","apiUrl","REACT_APP_API_URL","geminiKey","REACT_APP_GEMINI_API_KEY","socketUrl","REACT_APP_SOCKET_URL","analyticsId","REACT_APP_ANALYTICS_ID","envConfig"],"sources":["C:/Users/Manish singh/Desktop/personalized-news/frontend/src/utils/envValidation.js"],"sourcesContent":["// Environment variable validation\r\nconst requiredEnvVars = [\r\n  'REACT_APP_API_URL'\r\n];\r\n\r\nconst optionalEnvVars = [\r\n  'REACT_APP_GEMINI_API_KEY',\r\n  'REACT_APP_SOCKET_URL',\r\n  'REACT_APP_ANALYTICS_ID'\r\n];\r\n\r\nexport const validateEnvironment = () => {\r\n  const missing = [];\r\n  \r\n  requiredEnvVars.forEach(varName => {\r\n    if (!process.env[varName]) {\r\n      missing.push(varName);\r\n    }\r\n  });\r\n\r\n  if (missing.length > 0) {\r\n    console.error('Missing required environment variables:', missing);\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.warn('In development, some features may not work without these variables');\r\n    } else {\r\n      throw new Error(`Missing required environment variables: ${missing.join(', ')}`);\r\n    }\r\n  }\r\n\r\n  // Log optional variables that are missing\r\n  optionalEnvVars.forEach(varName => {\r\n    if (!process.env[varName]) {\r\n      console.warn(`Optional environment variable not set: ${varName}`);\r\n    }\r\n  });\r\n\r\n  return {\r\n    isValid: missing.length === 0,\r\n    missing,\r\n    apiUrl: process.env.REACT_APP_API_URL,\r\n    geminiKey: process.env.REACT_APP_GEMINI_API_KEY,\r\n    socketUrl: process.env.REACT_APP_SOCKET_URL,\r\n    analyticsId: process.env.REACT_APP_ANALYTICS_ID\r\n  };\r\n};\r\n\r\n// Validate on import\r\nexport const envConfig = validateEnvironment(); "],"mappings":"AAAA;AACA,MAAMA,eAAe,GAAG,CACtB,mBAAmB,CACpB;AAED,MAAMC,eAAe,GAAG,CACtB,0BAA0B,EAC1B,sBAAsB,EACtB,wBAAwB,CACzB;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EACvC,MAAMC,OAAO,GAAG,EAAE;EAElBH,eAAe,CAACI,OAAO,CAACC,OAAO,IAAI;IACjC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;MACzBF,OAAO,CAACK,IAAI,CAACH,OAAO,CAAC;IACvB;EACF,CAAC,CAAC;EAEF,IAAIF,OAAO,CAACM,MAAM,GAAG,CAAC,EAAE;IACtBC,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAER,OAAO,CAAC;IACjE,IAAIG,OAAO,CAACC,GAAG,CAACK,QAAQ,KAAK,aAAa,EAAE;MAC1CF,OAAO,CAACG,IAAI,CAAC,oEAAoE,CAAC;IACpF,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,2CAA2CX,OAAO,CAACY,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IAClF;EACF;;EAEA;EACAd,eAAe,CAACG,OAAO,CAACC,OAAO,IAAI;IACjC,IAAI,CAACC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,EAAE;MACzBK,OAAO,CAACG,IAAI,CAAC,0CAA0CR,OAAO,EAAE,CAAC;IACnE;EACF,CAAC,CAAC;EAEF,OAAO;IACLW,OAAO,EAAEb,OAAO,CAACM,MAAM,KAAK,CAAC;IAC7BN,OAAO;IACPc,MAAM,EAAEX,OAAO,CAACC,GAAG,CAACW,iBAAiB;IACrCC,SAAS,EAAEb,OAAO,CAACC,GAAG,CAACa,wBAAwB;IAC/CC,SAAS,EAAEf,OAAO,CAACC,GAAG,CAACe,oBAAoB;IAC3CC,WAAW,EAAEjB,OAAO,CAACC,GAAG,CAACiB;EAC3B,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAGvB,mBAAmB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}