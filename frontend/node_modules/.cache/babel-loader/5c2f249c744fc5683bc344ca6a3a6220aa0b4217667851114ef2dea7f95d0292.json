{"ast":null,"code":"import _objectSpread from \"C:/Users/Manish singh/Desktop/personalized-news/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport const warn = (i18n, code, msg, rest) => {\n  var _i18n$services, _i18n$services2, _console;\n  const args = [msg, _objectSpread({\n    code\n  }, rest || {})];\n  if (i18n !== null && i18n !== void 0 && (_i18n$services = i18n.services) !== null && _i18n$services !== void 0 && (_i18n$services = _i18n$services.logger) !== null && _i18n$services !== void 0 && _i18n$services.forward) {\n    return i18n.services.logger.forward(args, 'warn', 'react-i18next::', true);\n  }\n  if (isString(args[0])) args[0] = \"react-i18next:: \".concat(args[0]);\n  if (i18n !== null && i18n !== void 0 && (_i18n$services2 = i18n.services) !== null && _i18n$services2 !== void 0 && (_i18n$services2 = _i18n$services2.logger) !== null && _i18n$services2 !== void 0 && _i18n$services2.warn) {\n    i18n.services.logger.warn(...args);\n  } else if ((_console = console) !== null && _console !== void 0 && _console.warn) {\n    console.warn(...args);\n  }\n};\nconst alreadyWarned = {};\nexport const warnOnce = (i18n, code, msg, rest) => {\n  if (isString(msg) && alreadyWarned[msg]) return;\n  if (isString(msg)) alreadyWarned[msg] = new Date();\n  warn(i18n, code, msg, rest);\n};\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nexport const loadNamespaces = (i18n, ns, cb) => {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n};\nexport const loadLanguages = (i18n, lng, ns, cb) => {\n  if (isString(ns)) ns = [ns];\n  if (i18n.options.preload && i18n.options.preload.indexOf(lng) > -1) return loadNamespaces(i18n, ns, cb);\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n};\nexport const hasLoadedNamespace = function (ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(i18n, 'NO_LANGUAGES', 'i18n.languages were undefined or empty', {\n      languages: i18n.languages\n    });\n    return true;\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      var _options$bindI18n;\n      if (((_options$bindI18n = options.bindI18n) === null || _options$bindI18n === void 0 ? void 0 : _options$bindI18n.indexOf('languageChanging')) > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n};\nexport const getDisplayName = Component => Component.displayName || Component.name || (isString(Component) && Component.length > 0 ? Component : 'Unknown');\nexport const isString = obj => typeof obj === 'string';\nexport const isObject = obj => typeof obj === 'object' && obj !== null;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}