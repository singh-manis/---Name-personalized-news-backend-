{"ast":null,"code":"import _objectSpread from\"C:/Users/Manish singh/Desktop/personalized-news/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useCallback}from'react';import axios from'axios';import{toast}from'react-toastify';export function useNotifications(){const[notifications,setNotifications]=useState([]);const[loadingNotifications,setLoadingNotifications]=useState(true);const fetchNotifications=useCallback(async()=>{try{setLoadingNotifications(true);const token=localStorage.getItem('token');const res=await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/api/user/notifications\"),{headers:{'x-auth-token':token}});setNotifications(res.data);}catch(err){toast.error('Failed to fetch notifications');}finally{setLoadingNotifications(false);}},[]);const markAsRead=useCallback(async id=>{try{const token=localStorage.getItem('token');await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/user/notifications/\").concat(id,\"/read\"),{},{headers:{'x-auth-token':token}});setNotifications(prev=>prev.map(n=>n._id===id?_objectSpread(_objectSpread({},n),{},{read:true}):n));}catch(err){toast.error('Failed to mark notification as read');}},[]);return{notifications,loadingNotifications,fetchNotifications,markAsRead,setNotifications};}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}