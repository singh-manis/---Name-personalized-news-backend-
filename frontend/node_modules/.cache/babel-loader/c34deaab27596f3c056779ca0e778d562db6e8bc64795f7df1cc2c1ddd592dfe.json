{"ast":null,"code":"import { constructNow } from \"./constructNow.js\";\n\n/**\n * The {@link endOfTomorrow} function options.\n */\n\n/**\n * @name endOfTomorrow\n * @category Day Helpers\n * @summary Return the end of tomorrow.\n * @pure false\n *\n * @description\n * Return the end of tomorrow.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param options - The options\n * @returns The end of tomorrow\n *\n * @example\n * // If today is 6 October 2014:\n * const result = endOfTomorrow()\n * //=> Tue Oct 7 2014 23:59:59.999\n */\nexport function endOfTomorrow(options) {\n  const now = constructNow(options === null || options === void 0 ? void 0 : options.in);\n  const year = now.getFullYear();\n  const month = now.getMonth();\n  const day = now.getDate();\n  const date = constructNow(options === null || options === void 0 ? void 0 : options.in);\n  date.setFullYear(year, month, day + 1);\n  date.setHours(23, 59, 59, 999);\n  return options !== null && options !== void 0 && options.in ? options.in(date) : date;\n}\n\n// Fallback for modularized imports:\nexport default endOfTomorrow;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}