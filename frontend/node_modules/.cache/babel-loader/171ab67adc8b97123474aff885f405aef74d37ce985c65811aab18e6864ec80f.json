{"ast":null,"code":"import _defineProperty from \"C:/Users/Manish singh/Desktop/personalized-news/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { numericPatterns } from \"../constants.js\";\nimport { Parser } from \"../Parser.js\";\nimport { isLeapYearIndex, parseNDigits, parseNumericPattern } from \"../utils.js\";\nexport class DayOfYearParser extends Parser {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"priority\", 90);\n    _defineProperty(this, \"subpriority\", 1);\n    _defineProperty(this, \"incompatibleTokens\", [\"Y\", \"R\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"E\", \"i\", \"e\", \"c\", \"t\", \"T\"]);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, {\n          unit: \"date\"\n        });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}